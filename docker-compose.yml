services:
  postgres:
    build:
      context: ./src/db
      dockerfile: Dockerfile
    container_name: fiscal_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fiscal_network

  bot:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: fiscal_bot
    environment:
      # Настройки базы данных
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

      # Настройки Telegram бота
      TG_TOKEN: ${TG_TOKEN}
      ADMIN_ID: ${ADMIN_ID}
      
      # Настройки Python
      PYTHONPATH: /app/src
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./log:/app/log
    networks:
      - fiscal_network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  fiscal_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
